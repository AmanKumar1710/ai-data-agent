{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\OneDrive\\\\Desktop\\\\ai-data-agent\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [dataPreview, setDataPreview] = useState([]);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/upload/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setUploadStatus(`Success: ${response.data.detail}`);\n      setColumns(response.data.columns || []);\n      setDataPreview(response.data.preview || []);\n    } catch (error) {\n      setUploadStatus(\"Upload failed!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: 40\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Data Agent \\u2013 Upload Excel File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx,.xls\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: !selectedFile,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: uploadStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), columns.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Excel Data Preview (Top 5 Rows)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataPreview.map((row, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row[col]\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }, this))\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kKH+sXlGf+3JEPsrz28GnSk3CuI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","columns","setColumns","dataPreview","setDataPreview","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","post","headers","data","detail","preview","error","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","disabled","length","border","map","col","row","idx","_c","$RefreshReg$"],"sources":["C:/Users/Asus/OneDrive/Desktop/ai-data-agent/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState(\"\");\n  const [columns, setColumns] = useState([]);\n  const [dataPreview, setDataPreview] = useState([]);\n\n  const handleFileChange = (e) => {\n    setSelectedFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!selectedFile) return;\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile);\n    try {\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/upload/\",\n        formData,\n        { headers: { \"Content-Type\": \"multipart/form-data\" } }\n      );\n      setUploadStatus(`Success: ${response.data.detail}`);\n      setColumns(response.data.columns || []);\n      setDataPreview(response.data.preview || []);\n    } catch (error) {\n      setUploadStatus(\"Upload failed!\");\n    }\n  };\n\n  return (\n    <div style={{ margin: 40 }}>\n      <h1>AI Data Agent â€“ Upload Excel File</h1>\n      <input type=\"file\" accept=\".xlsx,.xls\" onChange={handleFileChange} />\n      <button onClick={handleUpload} disabled={!selectedFile}>\n        Upload\n      </button>\n      <p>{uploadStatus}</p>\n      {columns.length > 0 && (\n        <div>\n          <h2>Excel Data Preview (Top 5 Rows)</h2>\n          <table border=\"1\">\n            <thead>\n              <tr>\n                {columns.map((col) => (\n                  <th key={col}>{col}</th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              {dataPreview.map((row, idx) => (\n                <tr key={idx}>\n                  {columns.map((col) => (\n                    <td key={col}>{row[col]}</td>\n                  ))}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}